import pytest
import numpy as np
import pandas as pd

from visual_behavior.validation import extended_trials


@pytest.fixture
def exemplar_extended_trial_fixture():
    return pd.DataFrame(data={
        "Unnamed: 0": 0,
        "auto_rewarded": True,
        "change_contrast": 1.0,
        "change_frame": 90.0,
        "change_image_category": np.nan,
        "change_image_name": np.nan,
        "change_ori": 180.0,
        "change_time": 4.503416,
        "cumulative_reward_number": 1,
        "cumulative_volume": 0.005,
        "delta_ori": 90.0,
        "index": 0,
        "initial_contrast": 1.0,
        "initial_image_category": np.nan,
        "initial_image_name": np.nan,
        "initial_ori": 90.0,
        "lick_times": [5.1038541570305824],
        "optogenetics": False,
        "publish_time": '2017-07-19T10:35:17.799000',
        "response_latency": 0.600438,
        "response_time": [],
        "response_type": "HIT",
        "reward_frames": [90],
        "reward_times": [4.50341622],
        "reward_volume": 0.005,
        "rewarded": True,
        "scheduled_change_time": 3.96059,
        "startframe": 0,
        "starttime": 0.0,
        "stim_on_frames": [],
        "stimulus_distribution": "exponential",
        "task": "DetectionOfChange_General",
        "user_id": "linzyc",
        "stim_duration": 0.75,
        "LDT_mode": "single",
        "distribution_mean": 2,
        "trial_duration": 8.25,
        "stimulus": "full_screen_square_wave",
        "mouse_id": "M327444",
        "prechange_minimum": 2.25,
        "computer_name": "W7VS-SYSLOGIC36",
        "blank_duration_range": [0.0, 0.0],
        "response_window": [0.15, 1],
        "blank_screen_timeout": False,
        "session_duration": 3600.0983944,
        "stage": "static_full_field_gratings",
        "startdatetime": "2017-07-19 10:35:08.369",
        "date": "2017-07-19",
        "year": 2017,
        "month": 7,
        "day": 19,
        "hour": 10,
        "dayofweek": 2,
        "number_of_rewards": 1,
        "rig_id": "E6",
        "trial_type": "go",
        "endframe": 164,
        "lick_frames": [102],
        "endtime": 8.206208,
        "reward_licks": [0.60043793],
        "reward_lick_count": 1.0,
        "reward_lick_latency": 0.600438,
        "reward_rate": np.inf,
        "response": 1.0,
        "trial_length": 8.256248,
        "color": "blue",
    }, columns=[
        'Unnamed: 0', 'auto_rewarded', 'change_contrast', 'change_frame',
        'change_image_category', 'change_image_name', 'change_ori',
        'change_time', 'cumulative_reward_number', 'cumulative_volume',
        'delta_ori', 'index', 'initial_contrast', 'initial_image_category',
        'initial_image_name', 'initial_ori', 'lick_times', 'optogenetics',
        'publish_time', 'response_latency', 'response_time', 'response_type',
        'reward_frames', 'reward_times', 'reward_volume', 'rewarded',
        'scheduled_change_time', 'startframe', 'starttime', 'stim_on_frames',
        'stimulus_distribution', 'task', 'user_id', 'stim_duration', 'LDT_mode',
        'distribution_mean', 'trial_duration', 'stimulus', 'mouse_id',
        'prechange_minimum', 'computer_name', 'blank_duration_range',
        'response_window', 'blank_screen_timeout', 'session_duration', 'stage',
        'startdatetime', 'date', 'year', 'month', 'day', 'hour', 'dayofweek',
        'number_of_rewards', 'rig_id', 'trial_type', 'endframe', 'lick_frames',
        'endtime', 'reward_licks', 'reward_lick_count', 'reward_lick_latency',
        'reward_rate', 'response', 'trial_length', 'color'
    ])


@pytest.mark.parametrize("pre_change_time, expected", [
    (0, False, ),
    (2.25, True, ),
])
def test_validate_min_change_time(exemplar_extended_trial_fixture, pre_change_time):
    assert extended_trials.validate_min_change_time(exemplar_extended_trial_fixture, prechange_time) == expected
